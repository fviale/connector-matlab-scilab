%% Name of the job that will be submitted to the scheduler
JobName                 =       Matlab

%% Description of the job that will be submitted to the scheduler
JobDescription          =       Set of parallel Matlab tasks

%% Turn off or on for debug mode
Debug                   =       false

%% Tells if the local matlab workspace (caller of PAsolve) should be transferred or not
TransferEnv             =       false

%% Defines the variables which should be excluded from the workspace when transferring the environment (TransferEnv)
EnvExcludeList          =        ans,alreadyFoundFunctions

%% Defines the type of variables which should be excluded from the workspace when transferring the environment (TransferEnv)
EnvExcludeTypeList          =    PAResult,PAScheduler,PATask

%% Defines how many times a task can be executed (in case of error), it defaults to 2, to limit accidental crash of the remote engine due to memory limitations
NbTaskExecution         =       2

%% Runs the tasks in a separate JVM process
Fork                    =       false

%% Runs the tasks under the account of the current user, default to 'off'
RunAsMe                 =       false

%% Removes the job automatically from the scheduler after all results have been retrieved. If not the job is removed at the
%% end of the matlab session, or manually via PAjobRemove. default to 'on'
RemoveJobAfterRetrieve  =       true

%% URL of the FlexNet proxy server, uncomment to specify URL. If empty, no license check will be done
%% LicenseSaverURL        = rmi://myserver:1099

%% Custom DataSpace URL  (uncomment and fill these lines if you want to add a custom DataSpace like ftp
%% CustomDataspaceURL = ftp://server/root
%% CustomDataspacePath = path_to_root

%% uncomment and fill these line if the scheduler is deployed with a shared space, the push URL is the space to which input files will be pushed
%% the public url is the url of the space seen by the Scilab client, the private url is the url seen by the computing nodes
%% Both url can be equal, but if the infrastucture allows it, it is more efficient to use a file url as private, the computing
%% nodes will then access the space directly via a shared file system like NFS
%% SharedPushPublicUrl = pappnp://scheduler:1999/GlobalSpace/input
%% SharedPushPrivateUrl = file:///tmp/sceduler/shared/

%% uncomment and fill this line if the scheduler is deployed with a shared space, the pull URL is the space from which output files will be pulled,
%% the push URL can be the same as the pull URL. Similarly to the push url, there can be a public and a private version of it.
%% SharedPullPublicUrl = pappnp://scheduler:1999/GlobalSpace/output
%% SharedPullPrivateUrl = file:///tmp/sceduler/shared/

%% Uncomment this line to configure the way the proxy handle file transfer, either sequentially (false) or in parallel(true)
%% SharedAutomaticTransfer = true

%% Options used when saving matlab variables as files
TransferMatFileOptions  =       -v7

%% Uncomment this line to define a preferred version to use, default is the current matlab version
%% VersionPref

%% Defines which versions of matlab should not be used (default to versions for which the ptolemy matlab-java linkeage was not compiled)
VersionRej              =

%% Defines matlab minimum version to use
VersionMin              =       7.5

%% Defines matlab maximum version to use
VersionMax              =

%% The matlab version architecture to be used. "Any" means any architecture can be used,
%% "32" means only 32bit architectures and "64" means only 64-bit architectures.
VersionArch             =       any

%% Do we force the automated search of Matlab ?
%% In the default behavior, this is set to false. The selection script will try to search Matlab
%% only if a MatlabWorkerConfiguration.xml cannot be found on the host. If the script finds some Matlab instances it will
%% create a new MatlabWorkerConfiguration.xml to speed up latter executions.
%% If on the contrary ForceMatlabSearch is set to true, the selection script will always search the disk for Matlab installations
ForceMatlabSearch       =       false


%% Default priority for scheduler jobs produced by PAsolve
Priority                =       Normal

%% With this options set to true, the toolbox will use the jobClassPath feature of the scheduler, when submitting jobs
%% jar files necesaary to the matlab workers will be copied at each task execution. It will not be necessary to put the
%% jars in the addons directory, but it will introduce an overhead
UseJobClassPath         =       true

%% Options given to matlab worker processes started on windows operating systems
WindowsStartupOptions   =       -automation -nodesktop -nosplash -singleCompThread

%% Options given to matlab worker processes started on linux operating systems
LinuxStartupOptions     =       -nodesktop -nosplash -nodisplay -singleCompThread

%% Uncomment these lines if you want to add a custom selection script
%% CustomScript          =
%% CustomScriptStatic    =       false
%% CustomScriptParams    =

%% Script used to find if and where matlab is installed (Internal)
%% FindMatlabScript        =       $MATSCI$/script/file_matlab_finder.rb
FindMatlabScript        =       $MATSCI$/script/automatic_matlab_finder.rb
FindMatSciScriptStatic  =      true

%% Script used to reserve matlab tokens for the tasks, in conjunction with ProActive LicenseSaver
MatlabReservationScript =       $MATSCI$/script/reserve_matlab.rb


%% Path to jars used by the toolbox and the MiddleMan JVM
PathJars                =       $MATSCI$/lib

%% Commma separated list of jars used by ProActive that must be charged inside the middleman jvm
ProActiveJars           =       jruby-1.7.4.jar, jython-2.5.4-rc1.jar , groovy-all-2.1.6.jar, commons-httpclient-3.1.jar, commons-codec-1.3.jar,ProActive.jar, ProActive_Scheduler-core.jar, ProActive_SRM-common.jar, ProActive_Matlab_Scilab.jar

%% Commma separated list of jars used by the toolbox that must be charged inside Matlab
EmbeddedJars            =       ProActive_Matlab_Scilab_Embedded.jar;jdbm-2_4.jar

%% Commma separated list of jars used by the workers which must be used by the scheduler
WorkerJars            =       ProActive_Matlab_Scilab.jar;matlabcontrol-3.1.0.jar;ProActive_LicenseSaver-1.0.0-api.jar

%% File used by the middleman Jvm to configure Proactive
ProActiveConfiguration  =       $MATSCI$/config/MatlabProActiveConfiguration.xml

%% File used by the middleman Jvm to configure log4j loggers
Log4JConfiguration      =       $MATSCI$/config/log4j-client

%% File used by the middleman Jvm to configure Security policy
SecurityFile              =       $MATSCI$/config/security.java.policy-client

%% Port used to deploy the middleman jvm
RmiPort                 =       1111

%% Timeout used to deploy the middleman jvm (*10ms)
JvmTimeout              =       1200

%% Optional JVM arguments for the middleman JVM
JvmArguments            =

%% Internal : do we use the MatlabControl framework
UseMatlabControl        =       false

%% a popup will appear when the matlab session finishes and some jobs are uncomplete (internal)
EnableDisconnectedPopup =       true

%% Timeout used to start the matlab engine (*10ms)
WorkerTimeoutStart      =       6000